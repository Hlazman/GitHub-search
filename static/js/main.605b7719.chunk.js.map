{"version":3,"sources":["components/Navigation.jsx","context/alert/AlertContext.jsx","context/github/GithubContext.jsx","components/Search.jsx","components/Cards.jsx","pages/Home.jsx","pages/About.jsx","components/Repos.jsx","pages/Prifile.jsx","context/alert/alertReducer.jsx","context/types.js","context/alert/AlertState.jsx","components/Alert.jsx","context/github/githubReducer.jsx","context/github/githubState.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","className","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onChange","event","target","onKeyPress","key","clearUsers","trim","hide","search","show","Cards","user","src","avatar_url","alt","login","Home","loading","users","map","id","About","Repos","repos","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","prifile","useParams","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","fontSize","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","text","Alert","role","aria-label","onClick","aria-hidden","githubReducer","CLIENT_ID","process","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","withCreds","url","GithubState","a","setLoading","axios","get","response","data","items","App","path","element","replace","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.605b7719.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Navigation = () => (\n  <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\n    <div className=\"navbar-brand\">GitHub search</div>\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item\">\n        <NavLink to=\"/\" className=\"nav-link\">\n          HOME\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink to=\"/about\" className=\"nav-link\">\n          INFO\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n\n","import { createContext } from \"react\";\n\nexport const AlertContext = createContext();\n","import { createContext } from \"react\";\n\nexport const GithubContext = createContext();","import React, { useContext, useState } from \"react\";\nimport { AlertContext } from \"../context/alert/AlertContext\";\nimport { GithubContext } from \"../context/github/GithubContext\";\n\nexport const Search = () => {\n  const [value, setValue] = useState(\"\");\n  const alert = useContext(AlertContext);\n  const github = useContext(GithubContext);\n\n  const onSubmit = (event) => {\n    if (event.key !== \"Enter\") {\n      return;\n    }\n\n    github.clearUsers();\n\n    if (value.trim()) {\n      alert.hide();\n      github.search(value.trim());\n    } else {\n      alert.show(\"No data for searching\");\n    }\n  };\n\n  return (\n    <div className=\"form-group\">\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"write the user's nickname\"\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n        onKeyPress={onSubmit}\n      />\n    </div>\n  );\n};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Cards = ({ user }) => (\n  <div className=\"card\">\n    <img src={user.avatar_url} alt={user.login} className=\"card-img-top\" />\n    <div className=\"card-body\">\n      <h5 className=\"card-title\">{user.login}</h5>\n      <Link to={\"/profile/\" + user.login} className=\"btn btn-primary\">\n        OPEN\n      </Link>\n    </div>\n  </div>\n);","import React, { Fragment, useContext } from \"react\";\nimport { Search } from \"../components/Search\";\nimport { Cards } from \"../components/Cards\";\nimport { GithubContext } from \"../context/github/GithubContext\";\n\nexport const Home = () => {\n  const { loading, users } = useContext(GithubContext);\n\n  return (\n    <Fragment>\n      <Search />\n      <div className=\"row\">\n        {loading ? (\n          <p className=\"text-center\">Loading...</p>\n        ) : (\n          users.map((user) => (\n            <div className=\"col-sm-4 mb-4\" key={user.id}>\n              <Cards user={user} />\n            </div>\n          ))\n        )}\n      </div>\n    </Fragment>\n  );\n};","import React from \"react\";\n\nexport const About = () => {\n  return (\n    <div className=\"jumbotron\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">Information</h1>\n        <p className=\"lead\">\n          {\" \"}\n          Application version: <strong>1.0.0</strong>\n        </p>\n      </div>\n    </div>\n  );\n};","import React, { Fragment } from \"react\";\n\nexport const Repos = ({ repos }) => (\n  <Fragment>\n    {repos.map((repo) => (\n      <div className=\"card mb-3\" key={repo.id}>\n        <div className=\"card-body\">\n          <h5>\n            <a href={repo.html_url} rel=\"noopener noreferrer\" target=\"_blank\">\n              {repo.name}\n            </a>\n          </h5>\n        </div>\n      </div>\n    ))}\n  </Fragment>\n);\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport { GithubContext } from \"../context/github/GithubContext\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Repos } from \"../components/Repos\";\n\nexport const Profile = ({ match }) => {\n  const { getUser, getRepos, loading, user, repos } = useContext(GithubContext);\n  const { name: prifile } = useParams();\n\n  useEffect(() => {\n    getUser(prifile);\n    getRepos(prifile);\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return <p className=\"text-center\">Loading...</p>;\n  }\n\n  const {\n    name,\n    company,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n  } = user;\n\n  return (\n    <Fragment>\n      <Link to=\"/\" className=\"btn btn-link\">\n        {\" \"}\n        back home\n      </Link>\n      <div className=\"card mb-4\">\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-sm-3 text-center\">\n              <img className=\"shadow rounded\" src={avatar_url} alt={name} style={{ width: \"250px\" }} />\n              <h1 className=\"mt-4\" style={{ fontSize: \"30px\" }}>{name}</h1>\n              {location && <p> Location: {location}</p>}\n            </div>\n            <div className=\"col\">\n              {bio && (\n                <Fragment>\n                  <h3>BIO</h3>\n                  <p>{bio}</p>\n                </Fragment>\n              )}\n              <a \n                href={html_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"btn btn-dark mb-3\"\n              >\n                Open Profile\n              </a>\n              <ul>\n                {login && (\n                  <li>\n                    <strong> Username: </strong> {login}\n                  </li>\n                )}\n\n                {company && (\n                  <li>\n                    <strong> Company: </strong> {company}\n                  </li>\n                )}\n\n                {blog && (\n                  <li>\n                    <strong> Website: </strong> {blog}\n                  </li>\n                )}\n              </ul>\n\n              <div className=\"badge badge-primary mr-2\"> Followers: {followers}</div>\n              <div className=\"badge badge-success mr-2\"> Following: {following}</div>\n              <div className=\"badge badge-info mr-2\">\n                {\" \"}\n                Repository: {public_repos}\n              </div>\n              <div className=\"badge badge-dark\">Gists: {public_gists}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Repos repos={repos} />\n    </Fragment>\n  );\n};\n","import { HIDE_ALERT, SHOW_ALERT } from \"../types\";\n\nconst handlers = {\n  [SHOW_ALERT]: (state, action) => action.payload,\n  [HIDE_ALERT]: () => null,\n  DEFAULT: (state) => state,\n};\n\nexport const alertReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n  return handler(state, action);\n};\n","export const SHOW_ALERT = \"SHOW_ALERT\";\nexport const HIDE_ALERT = \"HIDE_ALERT\";\nexport const CLEAR_USERS = \"CLEAR_USERS\";\nexport const GET_REPOS = \"GET_REPOS\";\nexport const GET_USER = \"GET_USER\";\nexport const SEARCH_USERS = \"SEARCH_USERS\";\nexport const SET_LOADING = \"SET_LOADING\";\n","import React, { useReducer } from \"react\";\nimport { alertReducer } from \"./alertReducer\";\nimport { HIDE_ALERT, SHOW_ALERT } from \"../types\";\nimport { AlertContext } from \"./AlertContext\";\n\nexport const AlertState = ({ children }) => {\n  const [state, dispatch] = useReducer(alertReducer, null);\n\n  const hide = () => dispatch({ type: HIDE_ALERT });\n\n  const show = (text, type = \"secondary\") => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: { type, text },\n    });\n  };\n  return (\n    <AlertContext.Provider value={{ hide, show, alert: state }}>\n      {children}\n    </AlertContext.Provider>\n  );\n};","import React, { useContext } from \"react\";\nimport { AlertContext } from \"../context/alert/AlertContext\";\n\nexport const Alert = () => {\n  const { alert, hide } = useContext(AlertContext);\n\n  if (!alert) return null;\n\n  return (\n    <div\n      className={`alert alert-${alert.type || \"secondary\"} alert-dismissible`}\n      role=\"alert\"\n    >\n      {alert.text}\n      <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n};\n\n","import {\n  CLEAR_USERS,\n  GET_REPOS,\n  GET_USER,\n  SEARCH_USERS,\n  SET_LOADING,\n} from \"../types\";\n\nconst handlers = {\n  [SEARCH_USERS]: (state, { payload }) => ({\n    ...state,\n    users: payload,\n    loading: false,\n  }),\n  [GET_REPOS]: (state, { payload }) => ({\n    ...state,\n    repos: payload,\n    loading: false,\n  }),\n  [GET_USER]: (state, { payload }) => ({\n    ...state,\n    user: payload,\n    loading: false,\n  }),\n  [SET_LOADING]: (state) => ({ ...state, loading: true }),\n  [CLEAR_USERS]: (state) => ({ ...state, users: [] }),\n  DEFAULT: (state) => state,\n};\n\nexport const githubReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n  return handler(state, action);\n};\n","import React, { useReducer } from \"react\";\nimport { GithubContext } from \"./GithubContext\";\nimport {\n  CLEAR_USERS,\n  GET_REPOS,\n  GET_USER,\n  SEARCH_USERS,\n  SET_LOADING,\n} from \"../types\";\nimport { githubReducer } from \"./githubReducer\";\nimport axios from \"axios\";\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n\nconst withCreds = (url) => {\n  return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\n};\n\nexport const GithubState = ({ children }) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: [],\n  };\n\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  const search = async (value) => {\n    setLoading();\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\n    );\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: response.data.items,\n    });\n  };\n\n  const getUser = async (name) => {\n    setLoading();\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/users/${name}?`)\n    );\n\n    dispatch({\n      type: GET_USER,\n      payload: response.data,\n    });\n  };\n\n  const getRepos = async (name) => {\n    setLoading();\n\n    const response = await axios.get(\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\n    );\n\n    dispatch({\n      type: GET_REPOS,\n      payload: response.data,\n    });\n  };\n\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n  const setLoading = () => dispatch({ type: SET_LOADING });\n  const { user, users, repos, loading } = state;\n\n  return (\n    <GithubContext.Provider\n      value={{\n        setLoading,\n        search,\n        getUser,\n        getRepos,\n        clearUsers,\n        user,\n        users,\n        repos,\n        loading,\n      }}\n    >\n      {children}\n    </GithubContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { HashRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport { Navigation } from \"./components/Navigation\";\nimport { Home } from \"./pages/Home\";\nimport { About } from \"./pages/About\";\nimport { Profile } from \"./pages/Prifile\";\nimport { AlertState } from \"./context/alert/AlertState\";\nimport { Alert } from \"./components/Alert\";\nimport { GithubState } from \"./context/github/githubState\";\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <HashRouter>\n          <Navigation />\n          <div className=\"container pt-4\">\n            <Alert alert={{ text: \"Test alert\" }} />\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n              <Route path=\"/about\" element={<About />} />\n              <Route path=\"/profile/:name\" element={<Profile />} />\n            </Routes>\n          </div>\n        </HashRouter>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}